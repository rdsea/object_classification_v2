version: "3.8"

x-inference-build: &inference-build
  context: ./src
  dockerfile: inference/Dockerfile.cpu

services:
  preprocessing:
    image: rdsea/preprocessing
    build:
      context: ./src
      dockerfile: preprocessing/Dockerfile
    restart: unless-stopped
    ports:
      - 5010:5010
    environment:
      DOCKER: "true"
      MANUAL_TRACING: true
      OTEL_ENDPOINT: "http://jaeger:4318/v1/traces"
      cpus: 0.5


  ensemble:
    image: rdsea/ensemble
    build:
      context: ./src
      dockerfile: ensemble/Dockerfile
    restart: unless-stopped
    environment:
      DOCKER: "true"
      MANUAL_TRACING: true
      OTEL_ENDPOINT: "http://jaeger:4318/v1/traces"
      SEND_TO_QUEUE: true
      cpus: 0.5

  efficientnetb0:
    image: rdsea/inference:cpu
    build: *inference-build
    restart: unless-stopped
    command: ["--model", "EfficientNetB0"]
    environment:
      MANUAL_TRACING: true
      OTEL_ENDPOINT: "http://jaeger:4318/v1/traces"
    cpus: 2

  mobilenetv2:
    image: rdsea/inference:cpu
    build: *inference-build
    restart: unless-stopped
    command: ["--model", "MobileNetV2"]
    environment:
      MANUAL_TRACING: true
      OTEL_ENDPOINT: "http://jaeger:4318/v1/traces"
    cpus: 2

  # jaeger:
  #   image: jaegertracing/all-in-one:1.56
  #   ports:
  #     - "5775:5775/udp"
  #     - "6831:6831/udp"
  #     - "6832:6832/udp"
  #     - "5778:5778"
  #     - "16686:16686"
  #     - "14250:14250"
  #     - "14268:14268"
  #     - "14269:14269"
  #     - "4317:4317"
  #     - "4318:4318"
  #     - "9411:9411"

  # mongodb:
  #   image: mongo:6.0
  #   container_name: mongodb
  #   restart: unless-stopped
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: default_username
  #     MONGO_INITDB_ROOT_PASSWORD: default_password
  #   ports:
  #     - "27017:27017"
  #   healthcheck:
  #     test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  # rabbitmq:
  #   image: rabbitmq:3.12-management
  #   container_name: rabbitmq
  #   restart: unless-stopped
  #   environment:
  #     RABBITMQ_DEFAULT_USER: default_username
  #     RABBITMQ_DEFAULT_PASS: default_password
  #   ports:
  #     - "5672:5672" # RabbitMQ (AMQP)
  #     - "15672:15672" # RabbitMQ Management UI
  #   healthcheck:
  #     test: ["CMD", "rabbitmq-diagnostics", "ping"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5
  #
  # ml_consumer:
  #   image: rdsea/ml_consumer:latest
  #   build:
  #     context: ./src/database
  #     dockerfile: Dockerfile
  #   pull_policy: "always"
  #   container_name: ml_consumer
  #   restart: unless-stopped
  #   depends_on:
  #     mongodb:
  #       condition: service_started
  #     rabbitmq:
  #       condition: service_started
  #   environment:
  #     MANUAL_TRACING: true
  #     OTEL_ENDPOINT: "http://jaeger:4318/v1/traces"
