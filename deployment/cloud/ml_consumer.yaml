apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-consumer
  labels:
    app: ml-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ml-consumer
  template:
    metadata:
      labels:
        app: ml-consumer
    spec:
      initContainers:
        - name: wait-for-rabbitmq
          image: busybox:1.36
          command:
            [
              "sh",
              "-c",
              'until nc -z rabbitmq 5672; do echo "waiting for rabbitmq..."; sleep 2; done;',
            ]
        - name: wait-for-scylla
          image: busybox:1.36
          command:
            [
              "sh",
              "-c",
              'until nc -z scylla 9042; do echo "waiting for scylla..."; sleep 2; done;',
            ]
      containers:
        - name: ml-consumer
          image: rdsea/ml_consumer:v3
          env:
            - name: NUM_PROCESSES
              value: "3"
            - name: RABBITMQ_USERNAME
              value: admin
            - name: RABBITMQ_PASSWORD
              value: adminadminadmin
            - name: RABBITMQ_HOST
              value: "rabbitmq" # Or your RabbitMQ service name in Kubernetes
            - name: RABBITMQ_QUEUE_NAME
              value: "object_detection_result"
            - name: SCYLLA_HOST
              value: "scylla"
            - name: SCYLLA_PORT
              value: "9042"
            - name: MANUAL_TRACING
              value: "true"
            - name: OTEL_ENDPOINT
              value: "http://my-opentelemetry-collector.observe:4318/v1/traces" # Replace with your OpenTelemetry collector endpoint
---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-secret
type: Opaque
data:
  # username:  kubectl get secret rabbit-cluster-default-user -o jsonpath="{.data.username}" | base64 --decode
  # password: kubectl get secret rabbit-cluster-default-user -o jsonpath="{.data.password}" | base64 --decode
  username: Z3Vlc3Q= # echo -n 'guest' | base64
  password: Z3Vlc3Q= # echo -n 'guest' | base64
