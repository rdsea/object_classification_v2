version: "3.8"

services:
  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: default_username
      MONGO_INITDB_ROOT_PASSWORD: default_password
    volumes:
      - mongo_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    ports:
      - "27017:27017"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 5

  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_USER: default_username
      RABBITMQ_DEFAULT_PASS: default_password
    ports:
      - "5672:5672" # RabbitMQ (AMQP)
      - "15672:15672" # RabbitMQ Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - backend
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  ml_consumer:
    image: rdsea/ml_consumer:latest
    pull_policy: "always"
    container_name: ml_consumer
    restart: unless-stopped
    networks:
      - backend
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_started
    environment:
      MANUAL_TRACING: true
      OTEL_ENDPOINT: "http://jaeger:4318/v1/traces"

volumes:
  mongo_data:
  rabbitmq_data:

networks:
  backend:
    driver: bridge
